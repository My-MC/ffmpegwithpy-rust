name: CI

on:
  push:
    branches:
      - main
      - master
  pull_request:

jobs:
  build_linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.2.0

      - uses: messense/maturin-action@v1.34.0
        with:
          manylinux: auto
          command: build
          args: --release -o dist --manifest-path=ffmpegwithpy-rust/Cargo.toml --find-interpreter
      - name: Upload wheels
        uses: actions/upload-artifact@v3.1.1
        with:
          name: wheels
          path: dist

  build_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.2.0

      - uses: messense/maturin-action@v1.34.0
        with:
          command: build
          args: --release -o dist --manifest-path=ffmpegwithpy-rust/Cargo.toml --find-interpreter
      - name: Upload wheels
        uses: actions/upload-artifact@v3.1.1
        with:
          name: wheels
          path: dist

  build_macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.2.0

      - uses: messense/maturin-action@v1.34.0
        with:
          command: build
          args: --release -o dist --universal2 --manifest-path=ffmpegwithpy-rust/Cargo.toml --find-interpreter
      - name: Upload wheels
        uses: actions/upload-artifact@v3.1.1
        with:
          name: wheels
          path: dist

  black:
    if: github.event.pull_request
    needs: build_linux

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4.4.0
        with:
          python-version: "3.7"
          cache: "pip"
          cache-dependency-path: "ffmpegwithpy-rust/pyproject.toml"

      - name: Download artifact
        uses: actions/download-artifact@v3.0.1
        with:
          name: wheels
          path: wheels

      - name: Install dependencies
        run: |
          files=(wheels/*linux*)
          pip install "${files[@]}[dev]"

      - name: Run black
        run: task fmt_black

  isort:
    if: github.event.pull_request
    needs: build_linux

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4.4.0
        with:
          python-version: "3.7"
          cache: "pip"
          cache-dependency-path: "ffmpegwithpy-rust/pyproject.toml"

      - name: Download artifact
        uses: actions/download-artifact@v3.0.1
        with:
          name: wheels
          path: wheels

      - name: Install dependencies
        run: |
          files=(wheels/*linux*)
          pip install "${files[@]}[dev]"

      - name: Run isort
        run: task fmt_isort

  ruff:
    if: github.event.pull_request
    needs: build_linux

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4.4.0
        with:
          python-version: "3.7"
          cache: "pip"
          cache-dependency-path: "ffmpegwithpy-rust/pyproject.toml"

      - name: Download artifact
        uses: actions/download-artifact@v3.0.1
        with:
          name: wheels
          path: wheels

      - name: Install dependencies
        run: |
          files=(wheels/*linux*)
          pip install "${files[@]}[dev]"

      - name: Run ruff
        run: task lint

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [build_macos, build_windows, build_linux]
    steps:
      - uses: actions/download-artifact@v3.0.1
        with:
          name: wheels
      - name: Publish to PyPI
        uses: messense/maturin-action@v1.34.0
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --skip-existing *
